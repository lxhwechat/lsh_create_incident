#######################################################################################
# KM documentation for extension points and controller hooks
#
# IMPORTANT NOTE: This file MUST be saved in UTF-8 encoding! 
#                 This encoding is enforced when reading the file.
#
# See also: 
#            https://en.wikipedia.org/wiki/.properties
#            http://docs.oracle.com/javase/6/docs/api/java/util/Properties.html#load(java.io.Reader) 
# 
# This file must follow the Java properties format:
# <key> = <text>
# where
# <key> denoting the key of the extension point or controller hook.
# 
# <text> stating the actual text or description. Java properties allow only for one line per key!
# 
# When entering the text, consider the following:
# 
# Always start the text with a verb, such as “Allows you to …”, “Adds columns to…”.
# 
# For readability, the text can be multiple lines if the line ends with a backslash
# Example:
#
# S3.view.anExtensionPoint = Allows you to add an additional field to the input region.
#
# This can also be written as
#
# S3.view.anExtensionPoint = Allows you to add \
# an additional field to the input region.
#
# which will lead to the same final result. 
#
# NOTE: Lines containing such a line break will NOT show up with these line breaks when the final result
# is parsed. See section below on how to enforce line breaks in the final text.
#
#######################################################################################
#
#                Enforcing line breaks in the generated document
#
# If one wishes to enforce line breaks in the final document, this must be done
# by inserting \n (backslash + 'n') into the message. These points will be 
# recognized as line breaks.
# One can combine this with properties line breaks for readability (\n\) and continue on
# the next line.
# 
# Example:  
# S3.view.anExtensionPoint = Allows you to add an \
# additional field to the input region.\n This line will appear as separate line.\n\
# This line will appear on a third line in the final text.
# 
#######################################################################################

Details.view.extensionAfterObjectHeader = Allows you to add additional fields after the object header.
Details.view.extensionAfterInformationForm = Allows you to add additional fields after the information form.
Details.view.extensionAfterDescriptionForm = Allows you to add additional fields after the description form.

sm.itsm.createincident.view.Details~extHookOnIncidentTypeSelection = This controller hook is called after choosing "Details" and the route pattern match. This happens after selecting the incident type or when the incident type was externally set.
sm.itsm.createincident.view.Details~extHookOnBeforeCreateIncident = This controller hook is called before the incident is actually created, after selecting the create button.